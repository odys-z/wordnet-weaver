apply plugin: "java"
apply plugin: "eclipse"

eclipse {
    classpath {
       downloadSources=true
       downloadJavadoc = true
    }
}

eclipse.classpath.file {
    withXml { xml ->
        def node = xml.asNode()
        node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
        node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
    }
}

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = [ "src/", "test/" ]
sourceSets.main.resources.srcDirs = [ "assets/", "src/" ]

dependencies {
	// https://stackoverflow.com/questions/35795250/maven-project-as-dependency-in-gradle-project
	// To install client, install wn-weaver first
	api 'io.github.odys-z:anclient.weaver:0.0.1-SNAPSHOT'
	
	// See fork https://github.com/odys-z/gdx-gltf
	api 'io.github.odys-z:gdx-gltf:0.1.0-SNAPSHOT'
	
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
